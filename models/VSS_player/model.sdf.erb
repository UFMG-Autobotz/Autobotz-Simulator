<?xml version='1.0'?>

<%
  lib = '../../lib/models/' # path to simple shape ruby objects
  # SI units (length in meters)

  # CHASSI
  require_relative 'chassi'
  chassi = Chassi.new

  # Geometry
  chassi.length = 0.08
  chassi.width = 0.08
  chassi.h1 = 0.01
  chassi.h2 = 0.05
  chassi.h3 = 0.08

  # Kicker
  chassi.kicker.dy = 0.015
  chassi.kicker.radius = 0.05
  chassi.kicker.resolution = 15

  # Tag thickness (as a percentage of the chassi height)
  chassi.th = 0.0001

  # Calculate geometry
  chassi.calc_geometry

  # Inertia
  chassi.density = 700

  #WHEELS
  require_relative lib + 'cilinder'
  wheel = Cilinder.new

  # Geometry
  wheel.radius = 0.016
  wheel.length = 0.01

  # Pose
  wheel.roll = 0.5*Math::PI
  wheel.z = wheel.radius
  wheel.x = -0.0155
  wheel.y = 0.033

  # Inertia
  wheel.density = 1000

  # Surface
  wheel.mu = 50

  #BALL WHEEL
  require_relative lib + 'sphere'
  ball = Sphere.new

  # Geometry
  ball.radius = chassi.h1

  # Position
  ball.x = 0.02

  # Inertia
  ball.density = 1000

  # Surface
  ball.mu = 1
%>

<sdf version ='1.6'>

  <model name ='player'>

    <pose>0 0 0 0 0 0</pose>

    <link name ='chassi'>
      <pose>0 0 <%= chassi.h1 %> 0 0 0</pose>
      <inertial>
        <pose>0 0 <%= chassi.z  %> 0 0 0</pose>
        <mass> <%= chassi.mass %></mass>
        <inertia>
          <ixx><%= chassi.ixx %></ixx>
          <iyy><%= chassi.iyy %></iyy>
          <izz><%= chassi.izz %></izz>
        </inertia>
      </inertial>

      <collision name ='chassi_kicker_collision'>
        <geometry>
          <polyline>
            <height><%= chassi.kicker.height %></height>
            <point><%= 0.5*chassi.length %> <%= 0.5*chassi.width %></point>
            <point><%= -0.5*chassi.length %> <%= 0.5*chassi.width %></point>
            <point><%= -0.5*chassi.length %> <%= -0.5*chassi.width %></point>
            <point><%= 0.5*chassi.length %> <%= -0.5*chassi.width %></point>
            <% for i in 0..chassi.kicker.resolution do %>
            <point><%= 0.5*chassi.length + chassi.kicker.x(i) %> <%= chassi.kicker.y(i) %></point><% end %>
          </polyline>
        </geometry>
      </collision>

      <collision name ='chassi_body_collision'>
        <pose>0 0 <%= chassi.body.z %> 0 0 0</pose>
        <geometry>
          <box><size><%= chassi.body.length %> <%= chassi.body.width %> <%= chassi.body.height %></size></box>
        </geometry>
      </collision>

      <visual name ='chassi_kicker_visual'>
        <geometry>
          <polyline>
            <height><%= chassi.kicker.height %></height>
            <point><%= 0.5*chassi.length %> <%= 0.5*chassi.width %></point>
            <point><%= -0.5*chassi.length %> <%= 0.5*chassi.width %></point>
            <point><%= -0.5*chassi.length %> <%= -0.5*chassi.width %></point>
            <point><%= 0.5*chassi.length %> <%= -0.5*chassi.width %></point>
            <% for i in 0..chassi.kicker.resolution do %>
            <point><%= 0.5*chassi.length + chassi.kicker.x(i)%> <%= chassi.kicker.y(i) %></point><% end %>
          </polyline>
        </geometry>

        <material>
          <script>
            <uri>file://scripts</uri>
            <name>VSS_player/DarkGrey</name>
          </script>
        </material>
      </visual>

      <visual name ='chassi_body_visual'>
        <pose>0 0 <%= chassi.body.z  %> 0 0 0</pose>
        <geometry>
          <box><size><%= chassi.body.length %> <%= chassi.body.width %> <%= chassi.body.height %></size></box>
        </geometry>

        <material>
          <script>
            <uri>file://scripts</uri>
            <name>VSS_player/DarkGrey</name>
          </script>
        </material>
      </visual>

      <visual name ='chassi_tag_visual'>
        <pose>0 0 <%= chassi.tag.z %> 0 0 0</pose>
        <geometry>
          <box><size><%= chassi.tag.length %> <%= chassi.tag.width %> <%= chassi.tag.height %></size></box>
        </geometry>

        <material>
          <script>
            <uri>file://scripts</uri>
            <uri>file://textures/VSS_tags</uri>
          </script>
        </material>

        <plugin name="texture" filename="lib_change_material_plugin.so"> </plugin>
      </visual>

    </link>

    <link name ='left_wheel'>
      <pose><%= wheel.x %> <%= wheel.y %> <%= wheel.z %> <%= wheel.roll %> 0 0</pose>
      <inertial>
        <mass> <%= wheel.mass %></mass>
        <inertia>
          <ixx><%= wheel.ixx %></ixx>
          <iyy><%= wheel.iyy %></iyy>
          <izz><%= wheel.izz %></izz>
        </inertia>
      </inertial>

      <collision name ='left_wheel_collision'>
        <geometry>
          <cylinder>
            <radius><%= wheel.radius %></radius>
            <length><%= wheel.length %></length>
          </cylinder>
        </geometry>

        <surface>
          <friction>
            <ode>
              <mu><%= wheel.mu %></mu>
              <mu2><%= wheel.mu2 %></mu2>
            </ode>
          </friction>
        </surface>
      </collision>

      <visual name ='left_wheel_visual'>
        <geometry>
          <cylinder>
            <radius><%= wheel.radius %></radius>
            <length><%= wheel.length %></length>
          </cylinder>
        </geometry>

        <material>
          <script>
            <uri>file://scripts</uri>
            <name>VSS_player/DarkGrey</name>
          </script>
        </material>
      </visual>
    </link>

    <link name ='right_wheel'>
      <pose><%= wheel.x %> <%= -wheel.y %> <%= wheel.z %> <%= wheel.roll %> 0 0</pose>
      <inertial>
        <mass> <%= wheel.mass %></mass>
        <inertia>
          <ixx><%= wheel.ixx %></ixx>
          <iyy><%= wheel.iyy %></iyy>
          <izz><%= wheel.izz %></izz>
        </inertia>
      </inertial>

      <collision name ='right_wheel_collision'>
        <geometry>
          <cylinder>
            <radius><%= wheel.radius %></radius>
            <length><%= wheel.length %></length>
          </cylinder>
        </geometry>

        <surface>
          <friction>
            <ode>
              <mu><%= wheel.mu %></mu>
              <mu2><%= wheel.mu2 %></mu2>
            </ode>
          </friction>
        </surface>
      </collision>

      <visual name ='right_wheel_visual'>
        <geometry>
          <cylinder>
            <radius><%= wheel.radius %></radius>
            <length><%= wheel.length %></length>
          </cylinder>
        </geometry>

        <material>
          <script>
            <uri>file://scripts</uri>
            <name>VSS_player/DarkGrey</name>
          </script>
        </material>
      </visual>
    </link>

    <link name ='ball_wheel'>
      <pose><%= ball.x %> 0 <%= ball.radius %> 0 0 0</pose>
      <inertial>
        <mass> <%= ball.mass %></mass>
        <inertia>
          <ixx><%= ball.ixx %></ixx>
          <iyy><%= ball.iyy %></iyy>
          <izz><%= ball.izz %></izz>
        </inertia>
      </inertial>

      <collision name ='ball_wheel_collision'>
        <geometry>
          <sphere><radius><%= ball.radius %></radius></sphere>
        </geometry>

        <surface>
          <friction>
            <ode>
              <mu><%= ball.mu %></mu>
              <mu2><%= ball.mu2 %></mu2>
            </ode>
          </friction>
        </surface>
      </collision>

      <visual name ='ball_wheel_visual'>
        <geometry>
          <sphere><radius><%= ball.radius %></radius></sphere>
        </geometry>

        <material>
          <script>
            <uri>file://scripts</uri>
            <name>VSS_player/DarkGrey</name>
          </script>
        </material>
      </visual>
    </link>

    <joint name="chassi_left_wheel" type="revolute">
      <parent>chassi</parent>
      <child>left_wheel</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>

    </joint>

    <joint name="chassi_right_wheel" type="revolute">
      <parent>chassi</parent>
      <child>right_wheel</child>
      <axis>
        <xyz>0 0 -1</xyz>
      </axis>
    </joint>

    <joint name="chassi_ball_wheel" type="ball">
      <parent>chassi</parent>
      <child>ball_wheel</child>
    </joint>

  </model>

</sdf>
